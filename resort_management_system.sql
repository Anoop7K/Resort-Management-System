-- Fresh database
DROP DATABASE IF EXISTS Resorts;
CREATE DATABASE Resorts;
USE Resorts;

-- Drop tables in FK-safe order (children to parents)
DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS GUEST;
DROP TABLE IF EXISTS ROOMS;
DROP TABLE IF EXISTS RESERVATION;
DROP TABLE IF EXISTS EMPLOYEES;
DROP TABLE IF EXISTS ACTIVITIES;
DROP TABLE IF EXISTS RESORT;

-- Master: RESORT
CREATE TABLE RESORT (
RESORTID INT AUTO_INCREMENT PRIMARY KEY,
RESORTNAME VARCHAR(50) NOT NULL UNIQUE,
RESORTTYPE VARCHAR(30) NOT NULL,
RESORTADDRESS VARCHAR(200) NOT NULL
);

-- EMPLOYEES
CREATE TABLE EMPLOYEES (
EMPLOYEEID INT AUTO_INCREMENT PRIMARY KEY,
EMPLOYEENAME VARCHAR(50) NOT NULL,
EMPLOYEE_PH_NO BIGINT UNSIGNED NOT NULL,
EMPLOYEE_TYPE VARCHAR(30) NOT NULL,
EMPLOYEE_SALARY INT NOT NULL CHECK (EMPLOYEE_SALARY >= 0),
RESORTID INT NOT NULL,
CONSTRAINT fk_emp_resort FOREIGN KEY (RESORTID) REFERENCES RESORT(RESORTID),
INDEX idx_emp_resort (RESORTID)
);

-- RESERVATION
CREATE TABLE RESERVATION (
RESERVATIONID INT AUTO_INCREMENT PRIMARY KEY,
RESERVATION_TYPE VARCHAR(30) NOT NULL,
RESERVATION_DATE DATE NOT NULL,
RESORTID INT NOT NULL,
CONSTRAINT fk_reservation_resort FOREIGN KEY (RESORTID) REFERENCES RESORT(RESORTID),
INDEX idx_reservation_resort (RESORTID),
INDEX idx_reservation_date (RESERVATION_DATE)
);

-- ROOMS
CREATE TABLE ROOMS (
ROOMID INT AUTO_INCREMENT PRIMARY KEY,
FLOORNUMBER INT NOT NULL,
ROOM_TYPE VARCHAR(30) NOT NULL,
ROOM_COST INT NOT NULL CHECK (ROOM_COST >= 0),
RESERVATIONID INT NULL,
RESORTID INT NOT NULL,
CONSTRAINT fk_rooms_reservation FOREIGN KEY (RESERVATIONID) REFERENCES RESERVATION(RESERVATIONID),
CONSTRAINT fk_rooms_resort FOREIGN KEY (RESORTID) REFERENCES RESORT(RESORTID),
INDEX idx_rooms_resort (RESORTID),
INDEX idx_rooms_reservation (RESERVATIONID)
);

-- ACTIVITIES
CREATE TABLE ACTIVITIES (
ACTIVITYID INT AUTO_INCREMENT PRIMARY KEY,
ACTIVITYNAME VARCHAR(50) NOT NULL,
ACTIVITYTYPE VARCHAR(30) NOT NULL,
ACTIVITYPRICE INT NOT NULL CHECK (ACTIVITYPRICE >= 0),
RESORTID INT NOT NULL,
CONSTRAINT fk_activities_resort FOREIGN KEY (RESORTID) REFERENCES RESORT(RESORTID),
INDEX idx_activities_resort (RESORTID),
UNIQUE KEY uq_activity_per_resort (RESORTID, ACTIVITYNAME)
);

-- GUEST
CREATE TABLE GUEST (
GUESTID INT AUTO_INCREMENT PRIMARY KEY,
GUEST_NAME VARCHAR(50) NOT NULL,
GUEST_ADDRESS VARCHAR(100),
GUEST_MOB BIGINT UNSIGNED NOT NULL,
GUEST_AGE INT NOT NULL CHECK (GUEST_AGE >= 0),
ACTIVITYID INT NULL,
RESORTID INT NOT NULL,
ROOMID INT NOT NULL,
CONSTRAINT fk_guest_activity FOREIGN KEY (ACTIVITYID) REFERENCES ACTIVITIES(ACTIVITYID),
CONSTRAINT fk_guest_resort FOREIGN KEY (RESORTID) REFERENCES RESORT(RESORTID),
CONSTRAINT fk_guest_room FOREIGN KEY (ROOMID) REFERENCES ROOMS(ROOMID),
INDEX idx_guest_resort (RESORTID),
INDEX idx_guest_room (ROOMID),
INDEX idx_guest_activity (ACTIVITYID)
);

-- TRANSACTIONS
CREATE TABLE TRANSACTIONS (
TRANSACTIONID INT AUTO_INCREMENT PRIMARY KEY,
TRANSACTIONS_DT DATETIME NOT NULL,
TRANSACTION_TYPE ENUM('CASH','PAYTM','PHONE-Pay','Google-Pay','Slice','Other') NOT NULL,
TRANSACTIONAMT INT NOT NULL CHECK (TRANSACTIONAMT >= 0),
GUESTID INT NOT NULL,
CONSTRAINT fk_tx_guest FOREIGN KEY (GUESTID) REFERENCES GUEST(GUESTID),
INDEX idx_tx_guest (GUESTID),
INDEX idx_tx_dt (TRANSACTIONS_DT)
);

-- Data
INSERT INTO RESORT (RESORTNAME, RESORTTYPE, RESORTADDRESS) VALUES
('WHISTLING WOODS', 'RIVERSIDE RESORT', 'Film City Complex, Aarey Colony, Goregaon, Mumbai, Maharashtra 400065'),
('MAGENTA RESORT', 'RIVERSIDE RESORT', 'Bada Kanshirada, Road, Kogilban, Dandeli, Karnataka 581325'),
('OCEANIC BLISS', 'BEACH RESORT', 'Vagator Beach, Goa 403509'),
('MISTY PEAKS', 'HILL STATION RESORT', 'Kodaikanal, Tamil Nadu 624101'),
('FORT GRANDE', 'HERITAGE RESORT', 'Jaisalmer Fort, Rajasthan 345001');

INSERT INTO EMPLOYEES (EMPLOYEENAME, EMPLOYEE_PH_NO, EMPLOYEE_TYPE, EMPLOYEE_SALARY, RESORTID) VALUES
('ASHOK', 9876543210, 'WATCHMAN', 5000, 1),
('SUNIL', 9876543211, 'MANAGER', 10000, 1),
('BASAVRAJ', 9876543212, 'CLEANING', 3000, 1),
('KRISHNA', 9876543213, 'CLEANING', 3000, 1),
('RAJ', 9876543214, 'PLUMBER', 2000, 1),
('ANIL', 9584623712, 'WATCHMAN', 5000, 2),
('MANOJ', 6654896321, 'MANAGER', 10000, 2),
('VIKAS', 7755332266, 'CLEANING', 3000, 2),
('SRUJAN', 9988776655, 'CLEANING', 3000, 2),
('RAM', 9998887776, 'PLUMBER', 2000, 2),
('JOHN', 8899665544, 'RECEPTIONIST', 7000, 3),
('JAYA', 7788996655, 'CHEF', 12000, 3),
('SAUMYA', 8776655443, 'CLEANING', 3500, 4),
('RAHUL', 8877665544, 'MANAGER', 11000, 4);

INSERT INTO RESERVATION (RESERVATION_TYPE, RESERVATION_DATE, RESORTID) VALUES
('ONLINE', '2021-03-25', 1),
('ONLINE', '2021-03-26', 1),
('OFFLINE', '2021-03-27', 1),
('ONLINE', '2021-03-28', 2),
('ONLINE', '2021-03-29', 2),
('ONLINE', '2021-06-15', 3),
('OFFLINE', '2021-07-20', 4);

INSERT INTO ROOMS (FLOORNUMBER, ROOM_TYPE, ROOM_COST, RESERVATIONID, RESORTID) VALUES
(1, 'DOUBLE', 2000, 1, 1), -- ROOMID 1
(1, 'DOUBLE', 2000, 1, 1), -- ROOMID 2
(2, 'DOUBLE-AC', 3000, 2, 1), -- ROOMID 3
(2, 'DOUBLE-AC', 3000, 3, 1), -- ROOMID 4
(2, 'DOUBLE-AC', 3000, 3, 1), -- ROOMID 5
(2, 'DELUXE', 4000, 6, 3), -- ROOMID 6
(1, 'SINGLE', 1500, 7, 4), -- ROOMID 7
(3, 'SUITE', 6000, 7, 4), -- ROOMID 8
(1, 'DOUBLE', 2100, 6, 3), -- ROOMID 9
(1, 'DOUBLE-AC', 3200, 5, 2); -- ROOMID 10

INSERT INTO ACTIVITIES (ACTIVITYNAME, ACTIVITYTYPE, ACTIVITYPRICE, RESORTID) VALUES
('RIVERRAFTING', 'WATERSPORT', 500, 1),
('SWIMMING', 'WATERSPORT', 400, 1),
('Kayaking', 'WATERSPORT', 500, 2),
('Jungle Safari', 'TRAVEL', 500, 2),
('Beach Volleyball', 'SPORT', 300, 3),
('Hiking', 'ADVENTURE', 350, 4),
('Fort Tour', 'TRAVEL', 250, 5);

INSERT INTO GUEST (GUEST_NAME, GUEST_ADDRESS, GUEST_MOB, GUEST_AGE, ACTIVITYID, RESORTID, ROOMID) VALUES
('AJIT', 'BAGALKOT', 9876543218, 25, 1, 1, 1),
('SAMARTH', 'BAGALKOT', 9845324486, 25, 1, 1, 2),
('AKSHAY', 'BAGALKOT', 9456876324, 25, 3, 2, 10),
('VIVEK', 'BAGALKOT', 9765245681, 25, 3, 2, 10),
('PRATEEK', 'GADAG', 8456321564, 30, 2, 2, 3),
('PREKSHA', 'GADAG', 8765423615, 30, 2, 1, 4),
('PREM', 'BELGAUM', 8456259876, 28, 2, 1, 5),
('PREMIKA', 'BELGAUM', 8654213593, 28, 2, 2, 5),
('DHOLU', 'BELGAUM', 7754632151, 5, 2, 1, 3),
('ANA', 'GOA', 8889995566, 29, 5, 3, 6),
('SAVITA', 'MUMBAI', 9988776655, 35, 2, 1, 2),
('VIJAY', 'KOLHAPUR', 9192939495, 22, 4, 2, 10),
('PRIYA', 'GOA', 8885554443, 27, 5, 3, 9);

INSERT INTO TRANSACTIONS (TRANSACTIONS_DT, TRANSACTION_TYPE, TRANSACTIONAMT, GUESTID) VALUES
('2021-01-25 10:15:00', 'PHONE-Pay', 4000, 1),
('2021-02-26 16:30:00', 'PAYTM', 3000, 5),
('2021-02-27 12:45:00', 'CASH', 6000, 7),
('2021-02-28 15:00:00', 'Google-Pay', 9000, 10),
('2021-03-25 09:30:00', 'Slice', 9000, 12),
('2021-09-12 11:00:00', 'CASH', 3200, 13);


-- Queries

-- 1. Available rooms
SELECT r.ROOMID, r.ROOM_TYPE, r.RESORTID
FROM ROOMS r
LEFT JOIN GUEST g ON g.ROOMID = r.ROOMID
WHERE g.ROOMID IS NULL;

-- 2. Activities popularity
SELECT A.ACTIVITYNAME, COUNT(G.GUESTID) AS TOTAL_REGISTRATIONS
FROM ACTIVITIES A
LEFT JOIN GUEST G ON A.ACTIVITYID = G.ACTIVITYID
GROUP BY A.ACTIVITYNAME
ORDER BY TOTAL_REGISTRATIONS DESC, A.ACTIVITYNAME;

-- 3. Top 3 highest-paying guests (by single transaction)
SELECT G.GUEST_NAME, T.TRANSACTIONAMT
FROM TRANSACTIONS T
JOIN GUEST G ON G.GUESTID = T.GUESTID
ORDER BY T.TRANSACTIONAMT DESC
LIMIT 3;

-- 4. Number of guests per resort
SELECT R.RESORTNAME, COUNT(G.GUESTID) AS NUM_GUESTS
FROM RESORT R
LEFT JOIN GUEST G ON R.RESORTID = G.RESORTID
GROUP BY R.RESORTNAME
ORDER BY R.RESORTNAME;

-- 5. Unused activities (no guest registrations)
SELECT A.ACTIVITYNAME
FROM ACTIVITIES A
LEFT JOIN GUEST G ON G.ACTIVITYID = A.ACTIVITYID
WHERE G.ACTIVITYID IS NULL;

-- 6. Guests who paid via Phone-Pay or PAYTM (case-safe via ENUM)
SELECT DISTINCT G.GUEST_NAME
FROM GUEST G
JOIN TRANSACTIONS T ON T.GUESTID = G.GUESTID
WHERE T.TRANSACTION_TYPE IN ('PHONE-Pay','PAYTM')
ORDER BY G.GUEST_NAME;

-- 7. Activities with price, for all resorts
SELECT RESORTID, ACTIVITYNAME, ACTIVITYPRICE
FROM ACTIVITIES
ORDER BY RESORTID, ACTIVITYNAME;

-- 8. Guests and phone numbers who paid via CASH
SELECT DISTINCT G.GUEST_NAME, G.GUEST_MOB
FROM GUEST G
JOIN TRANSACTIONS T ON T.GUESTID = G.GUESTID
WHERE T.TRANSACTION_TYPE = 'CASH'
ORDER BY G.GUEST_NAME;

-- 9. Guests with a transaction after 2021-04-01
SELECT DISTINCT G.GUEST_NAME
FROM GUEST G
JOIN TRANSACTIONS T ON T.GUESTID = G.GUESTID
WHERE T.TRANSACTIONS_DT > '2021-04-01';

-- 10. Guests registered for RIVERRAFTING in WHISTLING WOODS
SELECT G.GUEST_NAME
FROM GUEST G
JOIN ACTIVITIES A ON A.ACTIVITYID = G.ACTIVITYID
JOIN RESORT R ON R.RESORTID = A.RESORTID
WHERE A.ACTIVITYNAME = 'RIVERRAFTING'
AND R.RESORTNAME = 'WHISTLING WOODS'
ORDER BY G.GUEST_NAME;